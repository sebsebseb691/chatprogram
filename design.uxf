<diagram program="umletino" version="15.1"><zoom_level>10</zoom_level><help_text>Space for diagram notes</help_text><element><id>UMLClass</id><coordinates><x>860</x><y>820</y><w>430</w><h>260</h></coordinates><panel_attributes>ModelFacade
--
-currentChatRoom: ChatRoomModel 
-client: Client
--
+getUser() : User
+getClient() : Client
+static getInstance() : ModelsFacade 
+static getChats() : ServerListModel 
+setChatRoom(chatRoom: ChatRoomModel) : void
+setChatRoomsList(chatRoomsList: LinkedList&lt;ChatRoomModel&gt;) : void
+getChatRoomByName(chatName: String) : ChatRoomModel 
+addChatRoom(ChatRoomModel chatRoom) : void
+addChatRoomFromServer(chatRoom: ChatRoomModel) : void
+createChatRoom(chatRoomName: String) : void
+createMessage(text: String, sender: String, chatRoomName: String) : void
+createImage(imageFile: File, chatRoomName: String, user: String) : void
+getChatRoom() : ChatRoomModel
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1540</x><y>760</y><w>200</w><h>190</h></coordinates><panel_attributes>&lt;&lt;Interface&gt;&gt;
View
--
+createView() : void
+getJPanel() : JPanel  
--
Creates JPanels and all elements
such as buttons and JTextFields.
Displays elements on JPanel
Observes controller</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>30</x><y>910</y><w>260</w><h>90</h></coordinates><panel_attributes>&lt;&lt;Interface&gt;&gt;
UserInterface
--
+getUsername() : String
+changeUsername(newName: String) : void
--
Represents a user with a username and
changes the username</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>80</x><y>60</y><w>200</w><h>140</h></coordinates><panel_attributes>&lt;&lt;Interface&gt;&gt;
ControllerInterface
--
+addPanelToFrame() : void
+public void addListener() : void
+public void addListeners() : void
--
Adds JPanel to JFrame,
creates listeners for elements
in view and handles the actions
performed
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1520</x><y>70</y><w>450</w><h>240</h></coordinates><panel_attributes>Server 
--
-ServerSocket serverSocket;
-List&lt;ClientManager&gt; clientManagers = new ArrayList&lt;&gt;();
-LinkedList&lt;ChatRoomModel&gt; serverList = new LinkedList&lt;ChatRoomModel&gt;();
-static final String HISTORY_FILE = "chat_history.ser";

--

+void start(int port) 
+void broadcast(Object message, ClientManager sender)
+void addChatRoom(ChatRoomModel chatRoom)
+ void addMessage(MessageInterface msg)
-void saveChatHistory()
- void loadChatHistory()
+LinkedList&lt;ChatRoomModel&gt; getServerList()
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1190</x><y>430</y><w>210</w><h>190</h></coordinates><panel_attributes>Viewoberver 
--

-- 
+Update() </panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>630</x><y>50</y><w>200</w><h>180</h></coordinates><panel_attributes>ControllerFacade/Navigator 
--
-frame: JFrame
--
+getFrame() : JFrame
+openChatRoom() : void
+openLoginPage() : void
+openServerList() : void
-removeAllViews() : void
--
Creates and returns the JFrame
used for all panels. Also handles
the navigation between views</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>360</x><y>0</y><w>210</w><h>70</h></coordinates><panel_attributes> LoginPageController
--
Lets the user change username
and handles unaccepted usernames</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>360</x><y>200</y><w>210</w><h>70</h></coordinates><panel_attributes>ChatRoomController
--
Sends messages and images</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>360</x><y>100</y><w>210</w><h>70</h></coordinates><panel_attributes>ServerListController
--
Creates a new chat room, lets user
connect to a chat</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>10</x><y>1200</y><w>270</w><h>120</h></coordinates><panel_attributes>&lt;&lt;Interface&gt;&gt;
HomePageModelInterface
--
+addChatRoom(chat: ChatRoomModel) : void
+removeChat(chat: ChatRoomModel) : void
--
Implemented as a singleton.
Displays all created chat rooms, lets user join
a existing chat room or create a new one.
Notifies view at updates</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>80</x><y>630</y><w>210</w><h>140</h></coordinates><panel_attributes>&lt;&lt;Interface&gt;&gt;
MessageInterface
--
+getMsg(): String
+getUser(): String
+getImage(): BufferedImage
+getChatRoomName(): String
--
Represents a message by text,
sender, and which chat room it
belongs to</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>380</x><y>800</y><w>210</w><h>70</h></coordinates><panel_attributes>Message
--
-text: String
-sender: String
-chatRoomName: String
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>380</x><y>570</y><w>360</w><h>160</h></coordinates><panel_attributes>Image
--
-chatRoomName: String
-user: String
-image: BufferedImage 
-imageBytes: byte[]
--
-readObject(ois: ObjectInputStream) : void
-writeObject(oos: ObjectOutputStream) : void
-bufferedImageToByteArray(image: BufferedImage) : byte[]
-byteArrayToBufferedImage(bytes: byte[]) : BufferedImage</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>1340</y><w>280</w><h>110</h></coordinates><panel_attributes>&lt;&lt;Interface&gt;&gt;
ChatRoomModelInterface
--
+addMessage(msg: MessageInterface) : void
+joinChatRoom(chatName: String) : void
+getMessages() : LinkedList&lt;MessageInterface&gt;
--
Represents a chat room by name. Stores
messages and connected users as lists</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1190</x><y>100</y><w>300</w><h>190</h></coordinates><panel_attributes>ClientManager
--
 -Socket socket;
 -Server server;
 -ObjectOutputStream oout;
 -ObjectInputStream oin;
--
+void run()
-void sendChatHistory()
+synchronized void sendMessage(Object message)
- void closeConnection()

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>270</x><y>190</y><w>110</w><h>60</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes><additional_attributes>10;10;90;40</additional_attributes></element><element><id>Relation</id><coordinates><x>270</x><y>110</y><w>110</w><h>40</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes><additional_attributes>10;20;90;20</additional_attributes></element><element><id>Relation</id><coordinates><x>270</x><y>20</y><w>110</w><h>60</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes><additional_attributes>10;40;90;10</additional_attributes></element><element><id>Relation</id><coordinates><x>560</x><y>20</y><w>90</w><h>50</h></coordinates><panel_attributes>lt=&lt;.
</panel_attributes><additional_attributes>10;20;70;30</additional_attributes></element><element><id>Relation</id><coordinates><x>560</x><y>110</y><w>90</w><h>40</h></coordinates><panel_attributes>lt=&lt;.
</panel_attributes><additional_attributes>10;20;70;20</additional_attributes></element><element><id>Relation</id><coordinates><x>560</x><y>210</y><w>90</w><h>40</h></coordinates><panel_attributes>lt=&lt;.
</panel_attributes><additional_attributes>10;20;70;20</additional_attributes></element><element><id>Relation</id><coordinates><x>280</x><y>720</y><w>150</w><h>140</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes><additional_attributes>10;10;100;120</additional_attributes></element><element><id>UMLClass</id><coordinates><x>380</x><y>910</y><w>210</w><h>70</h></coordinates><panel_attributes>User
--
-userName: String
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>280</x><y>930</y><w>120</w><h>40</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes><additional_attributes>10;20;100;20</additional_attributes></element><element><id>Relation</id><coordinates><x>280</x><y>600</y><w>120</w><h>90</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes><additional_attributes>10;70;100;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>380</x><y>1200</y><w>210</w><h>70</h></coordinates><panel_attributes>HomePageModel
--
-serverList: LinkedList&lt;ChatRoomModel&gt;
-observers: List&lt;ViewObserver&gt;
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>270</x><y>1220</y><w>130</w><h>40</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes><additional_attributes>10;20;110;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>380</x><y>1340</y><w>220</w><h>100</h></coordinates><panel_attributes>ChatRoomModel
--
-chatName: String
-msgs: LinkedList&lt;MessageInterface&gt;
-users: LinkedList&lt;User&gt;
-observsrs: List&lt;ViewObserver&gt;


</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>270</x><y>1370</y><w>130</w><h>40</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes><additional_attributes>10;20;110;20</additional_attributes></element><element><id>Relation</id><coordinates><x>580</x><y>920</y><w>300</w><h>50</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>10;30;280;10</additional_attributes></element><element><id>Relation</id><coordinates><x>580</x><y>920</y><w>300</w><h>340</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>10;320;280;10</additional_attributes></element><element><id>Relation</id><coordinates><x>590</x><y>920</y><w>290</w><h>480</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>10;460;270;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>320</x><y>1020</y><w>270</w><h>160</h></coordinates><panel_attributes>Client
--
-socket: Socket
-oout: ObjectOutputStream
-oin: ObjectInputStream
--
-connect(serverAddress: String, port: int) : void
-send(message: Object) : void
-listen() : void
-closeConnection() : void
--
Handles client connection </panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>580</x><y>920</y><w>300</w><h>190</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>10;170;280;10</additional_attributes></element><element><id>Relation</id><coordinates><x>730</x><y>650</y><w>150</w><h>300</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>10;10;130;280</additional_attributes></element><element><id>Relation</id><coordinates><x>580</x><y>830</y><w>300</w><h>120</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>10;10;280;100</additional_attributes></element><element><id>Relation</id><coordinates><x>720</x><y>220</y><w>370</w><h>620</h></coordinates><panel_attributes>lt=-&gt;</panel_attributes><additional_attributes>10;10;350;600</additional_attributes></element><element><id>UMLClass</id><coordinates><x>900</x><y>1160</y><w>240</w><h>160</h></coordinates><panel_attributes>&lt;&lt;Interface&gt;&gt;
ViewSubject
--
-addObserver(o: ViewObserver) : void
-removeObserver(o: ViewObserver) : void
-notifyObservers() : void
--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>580</x><y>1080</y><w>340</w><h>170</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes><additional_attributes>10;10;320;150</additional_attributes></element><element><id>Relation</id><coordinates><x>580</x><y>1210</y><w>340</w><h>50</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes><additional_attributes>10;30;320;20</additional_attributes></element><element><id>Relation</id><coordinates><x>590</x><y>1220</y><w>330</w><h>180</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes><additional_attributes>10;160;310;10</additional_attributes></element></diagram>